const translations = {
  BU_MASTER: "Unit Master",
  CITY_MASTER: "City Master",
  COMPANY_MASTER: "Company Master",
  COUNTRY_MASTER: "Country Master",
  DEPT_MASTER: "Department Master",
  DOCTOR_AVAILABILITY_MASTER: "Doctor Availability Master",
  DOCTOR_FEES_MASTER: "Doctor Fees Master",
  DOCTOR_MASTER: "Doctor Master",
  DOCTOR_TYPE_MASTER: "Doctor Type Master",
  FIELDS_META_DATA: "Fields Metadata",
  HOSPITAL_FLOOR_MASTER: "Hospital Floor Master",
  HOSPITAL_MASTER: "Hospital Master",
  OPD_DETAILS: "Outpatient Department Details",
  OPD_HEADER: "Outpatient Department Header",
  OPD_MEDICINE: "Outpatient Department Medicine",
  OPD_PRESCRIPTION: "Outpatient Department Prescription",
  OPD_PRESCRIPTION_UPLOAD: "Outpatient Department Prescription Upload",
  OPD_VITALS: "Outpatient Department Vitals",
  PHARMA_MEDICINE_MASTER: "Pharma Medicine Master",
  ROOM_TYPE_MASTER: "Room Type Master",
  SPECIALIZATION_MASTER: "Specialization Master",
  STATE_MASTER: "State Master",
  USER_MASTER: "User Master",
  VITAL_MASTER: "Vital Master",
  BLOOD_GROUP_MASTER: "Blood Group Master",
  TEST_TYPE_MASTER: "Test Type Master",
  TEST_MASTER_HEADER: "Test Master Header",
  TEST_MASTER_DETAIL: "Test Master Detail",
  //
  //Fields started
  id: "id",
  ACTIVE_STATE: "Active",
  AVAILABILITY_ID: "Availability ID",
  BU_ADD1: "Address Line 1",
  BU_ADD2: "Address Line 2",
  BU_CITY_CODE: "City Code",
  BU_CODE: "Unit Code",
  BU_COUN_CODE: "Country Code",
  BU_EMAIL: "Email",
  BU_FB: "Facebook",
  BU_GST: "GST",
  BU_INSTA: "Instagram",
  BU_LL: "Landline",
  BU_MOBILE: "Mobile",
  BU_NAME: "Unit Name",
  BU_PIN: "PIN",
  BU_REM: "Remark",
  BU_STATE_CODE: "State Code",
  BU_TWITTER: "Twitter",
  BU_WSITE: "Website",
  CAN_IND: "Candel Indicator",
  CAN_ROOM_TYPE: "Cancelled",
  CITY_CODE: "City Code",
  CITY_NAME: "City",
  COMP_ADD1: "Address Line 1",
  COMP_ADD2: "Address Line 2",
  COMP_CITY_CODE: "City Code",
  COMP_CODE: "Company Code",
  COMP_COUN_CODE: "Country Code",
  COMP_EMAIL: "Email",
  COMP_FB: "Facebook",
  COMP_GST: "GST",
  COMP_INSTA: "Instagram",
  COMP_LL: "Landline",
  COMP_MOBILE: "Mobile",
  COMP_NAME: "Company Name",
  COMP_PIN: "PIN",
  COMP_REM: "Remark",
  COMP_STATE_CODE: "State Code",
  COMP_TWITTER: "Twitter",
  COMP_WSITE: "Website",
  COUNTRY_CODE: "Country Code",
  COUNTRY_NAME: "Country Name",
  CREATED_BY: "Created By",
  CREATE_DATE: "Create Date",
  CREATE_RIGHTS: "Create Rights",
  CREATION_DATE: "Creation Date",
  DELETE_RIGHTS: "Delete Rights",
  DEPT_CODE: "Department Code",
  DEPT_NAME: "Department Name",
  DISPLAY_RIGHTS: "Display Rights",
  DR_ADD: "Address",
  DR_CODE: "Doctor Code",
  DR_CONTACT: "Contact",
  DR_EMAIL: "Email",
  DR_FEES: "Fees",
  DR_NAME: "Doctor Name",
  DR_NOTE: "Doctor's Note",
  DR_REGN_NO: "Doctor Registration Number",
  DR_REM: "Doctor's Remark",
  DR_REMARK: "Doctor's Remark",
  DR_SLOTF: "From",
  DR_SLOTT: "To",
  DR_TITLE: "Doctor Title",
  DR_TYPE_CODE: "Doctor Type Code",
  DR_TYPE_DESC: "Doctor Type Description",
  DR_VISIT_TYPE: "Visit Type",
  DR_WDAY: "Day",
  EDIT_RIGHTS: "Edit Rights",
  FLOOR_CODE: "Floor Code",
  FLOOR_DESC: "Floor Description",
  ID: "Id",
  IS_ADMIN: "Role",
  ITEM_MAX_LEVEL: "Item Maximum Level",
  ITEM_MIN_LEVEL: "Item Minimum Level",
  LAST_UPDATED_BY: "Last Updated By",
  LAST_UPDATE_DATE: "Last Update Date",
  LOCATION_CODE: "Location Code",
  LOCATION_DESC: "Location Description",
  MEDI_CODE: "Medicine Code",
  MEDI_DAYS: "Medicine Days",
  MEDI_DOSES: "Medicine Doses",
  MEDI_GENERIC: "Medicine Generic",
  MEDI_NAME: "Medicine Name",
  MEDI_PACKING_QTY: "Packing Quantity",
  MEDI_PRESCRIPTION_MUST: "Prescription Required",
  MEDI_REM: "Medicine Remark",
  MEDI_TYPE: "Type",
  MEDI_UNIT: "Unit",
  MFG_CODE: "Manufacture Code",
  NEXT_VISIT: "Next Visit",
  OPDP_ADATE: "Appointment Date",
  OPDP_ADD1: "Address Line 1",
  OPDP_ADD2: "Address Line 2",
  OPDP_AGE: "Age",
  OPDP_AMT_REFUND: "Refund Amount",
  OPDP_ANAME: "Attendant's Name",
  OPDP_ATIME: "Appointment Time",
  OPDP_CAN_REASON: "Cancel Reason",
  OPDP_CHARGES: "OPD Charges",
  OPDP_CITY: "City",
  OPDP_CONTACT: "Contact",
  OPDP_DEPT_CODE: "Department Code",
  OPDP_DEPT_NAME: "Department Name",
  OPDP_DOB: "Date of Birth",
  OPDP_EMAIL: "Email",
  OPDP_FHNAME: "Father/Husband Name",
  OPDP_MOP: "Payment Mode",
  OPDP_NAME: "Patient's Name",
  OPDP_PIN: "PIN",
  OPDP_RCONTACT: "Attendant's Contact",
  OPDP_REFBY: "Referred By",
  OPDP_REM: "Remark",
  OPDP_RNAME: "Relation with Attendant",
  OPDP_ROOM_NO: "Room Number",
  OPDP_STATE: "State",
  OPDP_TITLE: "Patient's Title",
  OPD_ID: "OPD ID",
  OPD_MEDICINE_ID: "Medicine ID",
  OPD_PRESCRIPTION_DATE: "Prescription Date",
  OPD_PRESCRIPTION_ID: "OPD Prescription ID",
  OPD_PRES_UPLOAD: "Uploaded Prescription",
  OPD_REGN_DATE: "Registration Date",
  OPD_REGN_NO: "OPD Registration Number",
  OPD_VITAL_ID: "Vital ID",
  PACK_UNIT: "Packing Unit",
  PASSWORD: "Password",
  PRESCRIPTION_DATE: "Prescription Date",
  ROOM_NO: "Room Number",
  ROOM_TYPE_CODE: "Room Type Code",
  ROOM_TYPE_NAME: "Room Type Name",
  SPECIAL_CODE: "Special Code",
  SPECIAL_DESC: "Special Description",
  STATE_CODE: "State Code",
  STATE_NAME: "State Name",
  TEST_PRESCRIBED: "Tests Prescribed",
  UPDATE_DATE: "Update Date",
  USER_CODE: "User Code",
  USER_EMAIL: "User Email",
  USER_NAME: "User Name",
  VITAL_CODE: "Vital Code",
  VITAL_NAME: "Vital Name",
  VITAL_VALUE: "Vital Value",
  BLOOD_GROUP: "Blood Group",
  BP_IND: "Blood / Platelets Ind",
  OPDP_CANCEL: "Cancellation Status",
  TEST_CODE: "Test Code",
  TEST_SRNO: "Test Sr No",
  TEST_DESC: "Test Description",
  TEST_RANGE_FROM: "Test Range From",
  TEST_RANGE_TO: "Test Range To",
  TEST_CODE: "Test Code",
  TEST_TYPE: "Test Type",
  BP_IND: "Blood",
  TEST_TYPE_NAME: "Type type",
};

function findMissingKeys(object, keysList) {
  const missingKeys = [];

  keysList.forEach((key) => {
    if (!(key in object)) {
      missingKeys.push(key);
    }
  });

  return missingKeys;
}

Object.defineProperty(String.prototype, "t", {
  get: function () {
    return translations[this] || this;
  },
});

export { translations };
